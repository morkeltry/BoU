.panels {
  overflow-x: hidden;
  display: flex;
  cursor: pointer;
  /* width: 100%; */
  max-width: 100%;
  margin: 50px 15%;

  /* NB position required to allow whizz of screen to transition - seems to be inherited*/
  position: relative;
  bottom: 0vh;

  /* see .panel re: stacking context */
  z-index: auto;
}

.transparent-interceptor {
  position: absolute;
  top: 0%;
  left: 0%;
  height: 100%;
  min-height: 100%;
  z-index:10;
  background-color : green;
}

.panel {
  box-shadow: inset 0 0 0 5px rgba(255, 255, 255, 0.1);
  color: white;
  text-align: center;
  align-items: center;
  /* Safari transitionend event.propertyName === flex */
  /* Chrome + FF transitionend event.propertyName === flex-grow */
  transition: font-size 0.7s cubic-bezier(0.61, -0.19, 0.7, -0.11),
    flex 0.2s cubic-bezier(0.6, -0.2, 0.4, 1.15), background 0.2s;
  background-size: cover;
  background-position: center;
  display: flex;
  flex: 1;
  flex-direction: column;
  /* justify-content: center; */
  align-items: center;
  overflow: hidden;

  position: relative;
  /* create explicit stacking context which hopefully will maintain all the way down to hoverables ;) */
  top: 0px;
  z-index: 0;
}

/* Flex Children */
.panel > * {
  margin: 0;
  width: 100%;
  transition: transform 0.5s;
  flex: 1 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

.panel > *:first-child {
  transform: translateY(-100%);
}

.panel.open-active {
  overflow-y: auto;
}

.panel.open-active > *:first-child {
  transform: translateY(0);
}

.panel > *:last-child {
  transform: translateY(100%);
}

.panel.open-active > *:last-child {
  transform: translateY(0);
}

.panel.open {
  flex: 5;
}
